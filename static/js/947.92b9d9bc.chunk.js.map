{"version":3,"file":"static/js/947.92b9d9bc.chunk.js","mappings":"iOA2DA,UArDqB,WAAO,IAAD,IAEfA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAehD,OAbAC,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAiB,mCAAG,8GAEAC,EAAAA,EAAAA,IAAgBb,GAFhB,OAEhBc,EAFgB,OAGtBV,EAAgBU,GAHM,gDAKtBC,QAAQC,MAAM,SAAd,MALsB,yDAAH,qDASvBJ,GACD,GAAE,CAACZ,KAGE,yBACKG,GACG,iCACI,SAAC,KAAD,CAAMc,GAAIV,EAASW,QAAnB,sBACA,wBAAKf,EAAagB,QACjBhB,EAAaiB,cACV,gBACAC,IAAG,yCAAoClB,EAAaiB,aACpDE,IAAKnB,EAAagB,MAClBI,MAAO,WAGX,sCAAcpB,EAAaqB,aAC3B,0CAAkBrB,EAAasB,iBAC/B,qCAAatB,EAAauB,OAAOC,KAAI,SAAAC,GAAW,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAsB,QAC5F,mDACA,2BACI,yBAAI,SAAC,KAAD,CAAMb,GAAE,kBAAajB,EAAb,SAAR,qBACJ,yBAAI,SAAC,KAAD,CAAMiB,GAAE,kBAAajB,EAAb,YAAR,2BAER,SAAC,EAAA+B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,UAKN,uCAIf,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { getMovieDetails } from \"api\"\nimport { Link, Outlet, useLocation, useParams} from \"react-router-dom\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\n\n\nconst MovieDetails = () => {\n\n    const { movieId } = useParams();\n    const [movieDetails, setMovieDetails] = useState(null);\n    const location = useLocation();\n    const backLink = useRef(location.state?.from ?? '/')\n  \n    useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const details = await getMovieDetails(movieId);\n        setMovieDetails(details);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    \n    fetchMovieDetails();\n  }, [movieId]);\n\n    return (\n        <div>\n            {movieDetails ? (\n                <>\n                    <Link to={backLink.current}>Go back</Link>\n                    <h2>{movieDetails.title}</h2>\n                    {movieDetails.poster_path && (\n                        <img\n                        src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n                        alt={movieDetails.title}\n                        width={'200px'}        \n                        />\n                    )}\n                    <p>Overview: {movieDetails.overview}</p>\n                    <p>Vote Average: {movieDetails.vote_average}</p>\n                    <ul>Genres: {movieDetails.genres.map(genre => { return <li key={genre.id}>{genre.name}</li>})}</ul>\n                    <p>Additional information</p>\n                    <ul>\n                        <li><Link to={`/movies/${movieId}/cast`}>Cast</Link></li>   \n                        <li><Link to={`/movies/${movieId}/reviews`}>Reviews</Link></li>\n                    </ul>\n                    <Suspense fallback={<div>Loading...</div>}>\n                      <Outlet />\n                    </Suspense> \n                    \n                </>\n            ) : (\n                <p>Loading...</p>\n            )}\n        </div>\n    )\n}\n\nexport default MovieDetails"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLink","useRef","state","from","useEffect","fetchMovieDetails","getMovieDetails","details","console","error","to","current","title","poster_path","src","alt","width","overview","vote_average","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}